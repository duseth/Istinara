// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Istinara",
            "url": "https://istinara.ru"
        },
        "license": {
            "name": "MIT License",
            "url": "https://spdx.org/licenses/MIT.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get JWT token for authorization requests",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    }
                }
            }
        },
        "/account/register": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Registration new user in the system",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    }
                }
            }
        },
        "/articles": {
            "get": {
                "description": "Returns list of all articles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Get all articles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Count of skipped records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for take in records",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ArticleListResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/articles/{id}": {
            "get": {
                "description": "Returns a single article",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Get article by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ArticleSingleResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Add a new article",
                "parameters": [
                    {
                        "type": "string",
                        "name": "description_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "description_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "quote_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "quote_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "title_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "title_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "transcription",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "work_id",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Article image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ArticleSingleResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Delete existence article",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Update existence article",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "description_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "description_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "quote_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "quote_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "title_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "title_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "transcription",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "work_id",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Article image that needs update",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ArticleSingleResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/authors": {
            "get": {
                "description": "Returns list of all authors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Get all authors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Count of skipped records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for take in records",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthorListResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/authors/{id}": {
            "get": {
                "description": "Returns a single author",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Get author by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthorSingleResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Add a new author",
                "parameters": [
                    {
                        "type": "string",
                        "name": "about_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "about_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "short_name_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "short_name_ru",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Author image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthorSingleResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Delete existence author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Update existence author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "about_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "about_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name_ru",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "short_name_ar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "short_name_ru",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Author image that needs update",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthorSingleResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/authors/{id}/works": {
            "get": {
                "description": "Returns list of all works",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Get all works by author ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.WorkListResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    }
                }
            }
        },
        "/works": {
            "get": {
                "description": "Returns list of all works",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "works"
                ],
                "summary": "Get all works",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Count of skipped records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for take in records",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.WorkListResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/works/{id}": {
            "get": {
                "description": "Returns a single work",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "works"
                ],
                "summary": "Get work by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.WorkSingleResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "works"
                ],
                "summary": "Add a new work",
                "parameters": [
                    {
                        "type": "string",
                        "name": "aboutAr",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "aboutRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "authorID",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "genreAr",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "genreRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "titleAr",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "titleRu",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Work image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.WorkSingleResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "works"
                ],
                "summary": "Delete existence work",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "works"
                ],
                "summary": "Update existence work",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "aboutAr",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "aboutRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "authorID",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "genreAr",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "genreRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "titleAr",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "titleRu",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Work image that needs update",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.WorkSingleResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/works/{id}/articles": {
            "get": {
                "description": "Returns list of all articles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "works"
                ],
                "summary": "Get all articles by work ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Work ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ArticleListResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.BadRequestResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "datatypes.Date": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "dto.ArticleDTO": {
            "type": "object",
            "properties": {
                "description_ar": {
                    "type": "string"
                },
                "description_ru": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "picture_path": {
                    "type": "string"
                },
                "quote_ar": {
                    "type": "string"
                },
                "quote_ru": {
                    "type": "string"
                },
                "title_ar": {
                    "type": "string"
                },
                "title_ru": {
                    "type": "string"
                },
                "transcription": {
                    "type": "string"
                },
                "work": {
                    "$ref": "#/definitions/dto.WorkDTO"
                }
            }
        },
        "dto.ArticleListResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ArticleDTO"
                    }
                }
            }
        },
        "dto.ArticleSingleResult": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.ArticleDTO"
                }
            }
        },
        "dto.AuthorDTO": {
            "type": "object",
            "properties": {
                "about_ar": {
                    "type": "string"
                },
                "about_ru": {
                    "type": "string"
                },
                "birth_date": {
                    "$ref": "#/definitions/datatypes.Date"
                },
                "death_date": {
                    "$ref": "#/definitions/datatypes.Date"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name_ar": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                },
                "picture_path": {
                    "type": "string"
                },
                "short_name_ar": {
                    "type": "string"
                },
                "short_name_ru": {
                    "type": "string"
                }
            }
        },
        "dto.AuthorListResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AuthorDTO"
                    }
                }
            }
        },
        "dto.AuthorSingleResult": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.AuthorDTO"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserDTO"
                }
            }
        },
        "dto.LoginResult": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.LoginResponse"
                }
            }
        },
        "dto.UserDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_privileged": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.WorkDTO": {
            "type": "object",
            "properties": {
                "about_ar": {
                    "type": "string"
                },
                "about_ru": {
                    "type": "string"
                },
                "author": {
                    "$ref": "#/definitions/dto.AuthorDTO"
                },
                "genre_ar": {
                    "type": "string"
                },
                "genre_ru": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "picture_path": {
                    "type": "string"
                },
                "publication_date": {
                    "$ref": "#/definitions/datatypes.Date"
                },
                "title_ar": {
                    "type": "string"
                },
                "title_ru": {
                    "type": "string"
                }
            }
        },
        "dto.WorkListResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.WorkDTO"
                    }
                }
            }
        },
        "dto.WorkSingleResult": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.WorkDTO"
                }
            }
        },
        "http.BadRequestResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Bad request"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "http.InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal Server Error"
                },
                "status": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "http.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "boolean",
                    "example": true
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        }
    },
    "securityDefinitions": {
        "token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{"http", "https"},
	Title:            "Istinara API",
	Description:      "Open Dictionary of Culturally Marked Vocabulary of the Russian Language with Arabic Translation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
