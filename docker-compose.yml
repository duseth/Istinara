version: '3.9'

services:
  server:
    build:
      context: server
      dockerfile: Dockerfile
    container_name: server
    ports:
      - "5000:5000"
    restart: always
    env_file:
      - server/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./server:/server
      - ./app/public:/server/app/public
    networks:
      - local

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    env_file:
      - server/.env
    ports:
      - "5432:5432"
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    networks:
      - local
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    env_file:
      - server/.env
    ports:
      - "5050:5050"
    networks:
      - local
    volumes:
      - ./pg-admin:/var/lib/pgadmin
      - ./app/nginx/ssl/istinara.crt:/certs/server.cert
      - ./app/nginx/ssl/istinara.key:/certs/server.key

  app:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: app
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app
      - /app/node_modules
    depends_on:
      - server
    env_file:
      - app/.env
    networks:
      - local

  nginx:
    image: nginx:stable-alpine
    command: [ "nginx", "-g", "daemon off;" ]
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./app/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./app/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
      - server
      - pgadmin
    networks:
      - local
      - global

networks:
  local:
    driver: bridge
    internal: true
  global:
    driver: bridge