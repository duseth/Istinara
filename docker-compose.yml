version: "3.9"

services:
  api:
    build:
      context: api
      dockerfile: build/Dockerfile
    ports:
      - "5000:5000"
    restart: always
    env_file:
      - api/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app/public:/app/public
      - ./ssl:/ssl
    networks:
      - local

  db:
    image: postgres:latest
    restart: always
    env_file:
      - api/.env
    ports:
      - "5432:5432"
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    networks:
      - local
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    env_file:
      - api/.env
    ports:
      - "5050:5050"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - local
    volumes:
      - ./pg-admin:/var/lib/pgadmin
      - ./ssl/istinara.crt:/certs/server.cert
      - ./ssl/istinara.key:/certs/server.key

  nginx:
    build:
      context: app
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./app/public/images:/usr/share/nginx/html/images
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - pgadmin
    networks:
      - local
      - global

networks:
  local:
    driver: bridge
    internal: true
  global:
    driver: bridge